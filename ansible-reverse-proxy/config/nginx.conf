user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    # Nginx should proxy requests to the application using an upstream directive
    upstream app {
        server 127.0.0.1:8000;
    }
	
	# Sets the maximum number and size of buffers used for reading large client request header
    large_client_header_buffers 4 32k;

    # All HTTP requests should permanently redirect to their HTTPS equivalent
    server {
        listen 80;
        listen [::]:80 default_server;
		server_name localhost
        return 301 https://$host$request_uri;
    }

    # Use the provided SSL keypair found in nginx/files/localhost.crt and nginx/files/localhost.key for your SSL configuration
    # Note: Ensure the SSL keypair is available to nginx, but is not baked in to the container image
    server {
        listen 443 ssl;
        server_name localhost;
        ssl_certificate         /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key     /etc/nginx/ssl/localhost.key;
		
        # The SSL configuration should use modern and secure protocols and ciphers
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass                           http://app;
		    proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP           $remote_addr;
			proxy_set_header X-Forwarded-Proto   $scheme;
        }
    }
}